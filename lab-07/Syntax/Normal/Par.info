-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Syntax/Normal/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pListExpr -> ListExpr                       (1)
	%start_pExpr -> Expr                               (2)
	%start_pMatchCase -> MatchCase                     (3)
	%start_pListMatchCase -> ListMatchCase             (4)
	%start_pBinding -> Binding                         (5)
	%start_pListBinding -> ListBinding                 (6)
	%start_pExpr1 -> Expr1                             (7)
	%start_pExpr2 -> Expr2                             (8)
	%start_pExpr3 -> Expr3                             (9)
	%start_pType -> Type                               (10)
	%start_pType1 -> Type1                             (11)
	%start_pFieldType -> FieldType                     (12)
	%start_pListFieldType -> ListFieldType             (13)
	%start_pTyping -> Typing                           (14)
	Ident -> L_Ident                                   (15)
	Program -> ListExpr                                (16)
	ListExpr ->                                        (17)
	ListExpr -> Expr                                   (18)
	ListExpr -> Expr ';' ListExpr                      (19)
	Expr -> 'if' Expr 'then' Expr 'else' Expr          (20)
	Expr -> 'let' Ident '=' Expr 'in' Expr             (21)
	Expr -> 'fun' '(' Ident ':' Type ')' '{' 'return' Expr '}'   (22)
	Expr -> '{' ListBinding '}'                        (23)
	Expr -> '<' Ident '=' Expr '>'                     (24)
	Expr -> 'match' Expr1 '{' ListMatchCase '}'        (25)
	Expr -> '[' ListExpr ']'                           (26)
	Expr -> Expr1                                      (27)
	MatchCase -> '<' Ident '=' Ident '>' '=>' Expr     (28)
	ListMatchCase ->                                   (29)
	ListMatchCase -> MatchCase                         (30)
	ListMatchCase -> MatchCase ';' ListMatchCase       (31)
	Binding -> Ident '=' Expr                          (32)
	ListBinding ->                                     (33)
	ListBinding -> Binding                             (34)
	ListBinding -> Binding ',' ListBinding             (35)
	Expr1 -> Expr1 Expr2                               (36)
	Expr1 -> Expr2                                     (37)
	Expr2 -> 'cons' Expr3 Expr3                        (38)
	Expr2 -> 'head' Expr3                              (39)
	Expr2 -> 'isempty' Expr3                           (40)
	Expr2 -> 'tail' Expr3                              (41)
	Expr2 -> 'succ' Expr3                              (42)
	Expr2 -> 'pred' Expr3                              (43)
	Expr2 -> 'iszero' Expr3                            (44)
	Expr2 -> 'fix' Expr3                               (45)
	Expr2 -> Expr3                                     (46)
	Expr3 -> Expr3 '.' Ident                           (47)
	Expr3 -> 'true'                                    (48)
	Expr3 -> 'false'                                   (49)
	Expr3 -> '0'                                       (50)
	Expr3 -> Ident                                     (51)
	Expr3 -> '(' Expr ')'                              (52)
	Type -> Type1 '->' Type                            (53)
	Type -> '{' ListFieldType '}'                      (54)
	Type -> '<' ListFieldType '>'                      (55)
	Type -> '[' Type ']'                               (56)
	Type -> Type1                                      (57)
	Type1 -> 'Bool'                                    (58)
	Type1 -> 'Nat'                                     (59)
	Type1 -> 'Top'                                     (60)
	Type1 -> 'Bot'                                     (61)
	Type1 -> '(' Type ')'                              (62)
	FieldType -> Ident ':' Type                        (63)
	ListFieldType ->                                   (64)
	ListFieldType -> FieldType                         (65)
	ListFieldType -> FieldType ',' ListFieldType       (66)
	Typing -> Expr ':' Type                            (67)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	'.'            { PT _ (TS _ 5) }
	'0'            { PT _ (TS _ 6) }
	':'            { PT _ (TS _ 7) }
	';'            { PT _ (TS _ 8) }
	'<'            { PT _ (TS _ 9) }
	'='            { PT _ (TS _ 10) }
	'=>'           { PT _ (TS _ 11) }
	'>'            { PT _ (TS _ 12) }
	'Bool'         { PT _ (TS _ 13) }
	'Bot'          { PT _ (TS _ 14) }
	'Nat'          { PT _ (TS _ 15) }
	'Top'          { PT _ (TS _ 16) }
	'['            { PT _ (TS _ 17) }
	']'            { PT _ (TS _ 18) }
	'cons'         { PT _ (TS _ 19) }
	'else'         { PT _ (TS _ 20) }
	'false'        { PT _ (TS _ 21) }
	'fix'          { PT _ (TS _ 22) }
	'fun'          { PT _ (TS _ 23) }
	'head'         { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'in'           { PT _ (TS _ 26) }
	'isempty'      { PT _ (TS _ 27) }
	'iszero'       { PT _ (TS _ 28) }
	'let'          { PT _ (TS _ 29) }
	'match'        { PT _ (TS _ 30) }
	'pred'         { PT _ (TS _ 31) }
	'return'       { PT _ (TS _ 32) }
	'succ'         { PT _ (TS _ 33) }
	'tail'         { PT _ (TS _ 34) }
	'then'         { PT _ (TS _ 35) }
	'true'         { PT _ (TS _ 36) }
	'{'            { PT _ (TS _ 37) }
	'}'            { PT _ (TS _ 38) }
	L_Ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pListExpr rule  1
	%start_pExpr    rule  2
	%start_pMatchCase rule  3
	%start_pListMatchCase rule  4
	%start_pBinding rule  5
	%start_pListBinding rule  6
	%start_pExpr1   rule  7
	%start_pExpr2   rule  8
	%start_pExpr3   rule  9
	%start_pType    rule  10
	%start_pType1   rule  11
	%start_pFieldType rule  12
	%start_pListFieldType rule  13
	%start_pTyping  rule  14
	Ident           rule  15
	Program         rule  16
	ListExpr        rules 17, 18, 19
	Expr            rules 20, 21, 22, 23, 24, 25, 26, 27
	MatchCase       rule  28
	ListMatchCase   rules 29, 30, 31
	Binding         rule  32
	ListBinding     rules 33, 34, 35
	Expr1           rules 36, 37
	Expr2           rules 38, 39, 40, 41, 42, 43, 44, 45, 46
	Expr3           rules 47, 48, 49, 50, 51, 52
	Type            rules 53, 54, 55, 56, 57
	Type1           rules 58, 59, 60, 61, 62
	FieldType       rule  63
	ListFieldType   rules 64, 65, 66
	Typing          rule  67

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16
	%eof           reduce using rule 17

	Ident          goto state 17
	Program        goto state 71
	ListExpr       goto state 72
	Expr           goto state 70
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 1

	%start_pListExpr -> . ListExpr                      (rule 1)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16
	%eof           reduce using rule 17

	Ident          goto state 17
	ListExpr       goto state 69
	Expr           goto state 70
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 2

	%start_pExpr -> . Expr                              (rule 2)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 68
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 3

	%start_pMatchCase -> . MatchCase                    (rule 3)

	'<'            shift, and enter state 66

	MatchCase      goto state 67

State 4

	%start_pListMatchCase -> . ListMatchCase            (rule 4)

	'<'            shift, and enter state 66
	%eof           reduce using rule 29

	MatchCase      goto state 64
	ListMatchCase  goto state 65

State 5

	%start_pBinding -> . Binding                        (rule 5)

	L_Ident        shift, and enter state 16

	Ident          goto state 60
	Binding        goto state 63

State 6

	%start_pListBinding -> . ListBinding                (rule 6)

	L_Ident        shift, and enter state 16
	%eof           reduce using rule 33

	Ident          goto state 60
	Binding        goto state 61
	ListBinding    goto state 62

State 7

	%start_pExpr1 -> . Expr1                            (rule 7)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'head'         shift, and enter state 31
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr1          goto state 59
	Expr2          goto state 20
	Expr3          goto state 21

State 8

	%start_pExpr2 -> . Expr2                            (rule 8)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'head'         shift, and enter state 31
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr2          goto state 58
	Expr3          goto state 21

State 9

	%start_pExpr3 -> . Expr3                            (rule 9)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 57

State 10

	%start_pType -> . Type                              (rule 10)

	'('            shift, and enter state 47
	'<'            shift, and enter state 54
	'Bool'         shift, and enter state 48
	'Bot'          shift, and enter state 49
	'Nat'          shift, and enter state 50
	'Top'          shift, and enter state 51
	'['            shift, and enter state 55
	'{'            shift, and enter state 56

	Type           goto state 52
	Type1          goto state 53

State 11

	%start_pType1 -> . Type1                            (rule 11)

	'('            shift, and enter state 47
	'Bool'         shift, and enter state 48
	'Bot'          shift, and enter state 49
	'Nat'          shift, and enter state 50
	'Top'          shift, and enter state 51

	Type1          goto state 46

State 12

	%start_pFieldType -> . FieldType                    (rule 12)

	L_Ident        shift, and enter state 16

	Ident          goto state 42
	FieldType      goto state 45

State 13

	%start_pListFieldType -> . ListFieldType            (rule 13)

	L_Ident        shift, and enter state 16
	%eof           reduce using rule 64

	Ident          goto state 42
	FieldType      goto state 43
	ListFieldType  goto state 44

State 14

	%start_pTyping -> . Typing                          (rule 14)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 18
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21
	Typing         goto state 22

State 15

	Ident -> . L_Ident                                  (rule 15)

	L_Ident        shift, and enter state 16


State 16

	Ident -> L_Ident .                                  (rule 15)

	'('            reduce using rule 15
	')'            reduce using rule 15
	','            reduce using rule 15
	'.'            reduce using rule 15
	'0'            reduce using rule 15
	':'            reduce using rule 15
	';'            reduce using rule 15
	'='            reduce using rule 15
	'>'            reduce using rule 15
	']'            reduce using rule 15
	'cons'         reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'fix'          reduce using rule 15
	'head'         reduce using rule 15
	'in'           reduce using rule 15
	'isempty'      reduce using rule 15
	'iszero'       reduce using rule 15
	'pred'         reduce using rule 15
	'succ'         reduce using rule 15
	'tail'         reduce using rule 15
	'then'         reduce using rule 15
	'true'         reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	%eof           reduce using rule 15


State 17

	Expr3 -> Ident .                                    (rule 51)

	'('            reduce using rule 51
	')'            reduce using rule 51
	','            reduce using rule 51
	'.'            reduce using rule 51
	'0'            reduce using rule 51
	':'            reduce using rule 51
	';'            reduce using rule 51
	'>'            reduce using rule 51
	']'            reduce using rule 51
	'cons'         reduce using rule 51
	'else'         reduce using rule 51
	'false'        reduce using rule 51
	'fix'          reduce using rule 51
	'head'         reduce using rule 51
	'in'           reduce using rule 51
	'isempty'      reduce using rule 51
	'iszero'       reduce using rule 51
	'pred'         reduce using rule 51
	'succ'         reduce using rule 51
	'tail'         reduce using rule 51
	'then'         reduce using rule 51
	'true'         reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	L_Ident        reduce using rule 51
	%eof           reduce using rule 51


State 18

	Typing -> Expr . ':' Type                           (rule 67)

	':'            shift, and enter state 103


State 19

	Expr -> Expr1 .                                     (rule 27)
	Expr1 -> Expr1 . Expr2                              (rule 36)

	'('            shift, and enter state 23
	')'            reduce using rule 27
	','            reduce using rule 27
	'0'            shift, and enter state 24
	':'            reduce using rule 27
	';'            reduce using rule 27
	'>'            reduce using rule 27
	']'            reduce using rule 27
	'cons'         shift, and enter state 27
	'else'         reduce using rule 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'head'         shift, and enter state 31
	'in'           reduce using rule 27
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'then'         reduce using rule 27
	'true'         shift, and enter state 40
	'}'            reduce using rule 27
	L_Ident        shift, and enter state 16
	%eof           reduce using rule 27

	Ident          goto state 17
	Expr2          goto state 78
	Expr3          goto state 21

State 20

	Expr1 -> Expr2 .                                    (rule 37)

	'('            reduce using rule 37
	')'            reduce using rule 37
	','            reduce using rule 37
	'0'            reduce using rule 37
	':'            reduce using rule 37
	';'            reduce using rule 37
	'>'            reduce using rule 37
	']'            reduce using rule 37
	'cons'         reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'fix'          reduce using rule 37
	'head'         reduce using rule 37
	'in'           reduce using rule 37
	'isempty'      reduce using rule 37
	'iszero'       reduce using rule 37
	'pred'         reduce using rule 37
	'succ'         reduce using rule 37
	'tail'         reduce using rule 37
	'then'         reduce using rule 37
	'true'         reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	%eof           reduce using rule 37


State 21

	Expr2 -> Expr3 .                                    (rule 46)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 46
	')'            reduce using rule 46
	','            reduce using rule 46
	'.'            shift, and enter state 79
	'0'            reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	'>'            reduce using rule 46
	']'            reduce using rule 46
	'cons'         reduce using rule 46
	'else'         reduce using rule 46
	'false'        reduce using rule 46
	'fix'          reduce using rule 46
	'head'         reduce using rule 46
	'in'           reduce using rule 46
	'isempty'      reduce using rule 46
	'iszero'       reduce using rule 46
	'pred'         reduce using rule 46
	'succ'         reduce using rule 46
	'tail'         reduce using rule 46
	'then'         reduce using rule 46
	'true'         reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	L_Ident        reduce using rule 46
	%eof           reduce using rule 46


State 22

	%start_pTyping -> Typing .                          (rule 14)

	%eof           accept


State 23

	Expr3 -> '(' . Expr ')'                             (rule 52)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 102
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 24

	Expr3 -> '0' .                                      (rule 50)

	'('            reduce using rule 50
	')'            reduce using rule 50
	','            reduce using rule 50
	'.'            reduce using rule 50
	'0'            reduce using rule 50
	':'            reduce using rule 50
	';'            reduce using rule 50
	'>'            reduce using rule 50
	']'            reduce using rule 50
	'cons'         reduce using rule 50
	'else'         reduce using rule 50
	'false'        reduce using rule 50
	'fix'          reduce using rule 50
	'head'         reduce using rule 50
	'in'           reduce using rule 50
	'isempty'      reduce using rule 50
	'iszero'       reduce using rule 50
	'pred'         reduce using rule 50
	'succ'         reduce using rule 50
	'tail'         reduce using rule 50
	'then'         reduce using rule 50
	'true'         reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	L_Ident        reduce using rule 50
	%eof           reduce using rule 50


State 25

	Expr -> '<' . Ident '=' Expr '>'                    (rule 24)

	L_Ident        shift, and enter state 16

	Ident          goto state 101

State 26

	Expr -> '[' . ListExpr ']'                          (rule 26)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	']'            reduce using rule 17
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	ListExpr       goto state 100
	Expr           goto state 70
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 27

	Expr2 -> 'cons' . Expr3 Expr3                       (rule 38)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 99

State 28

	Expr3 -> 'false' .                                  (rule 49)

	'('            reduce using rule 49
	')'            reduce using rule 49
	','            reduce using rule 49
	'.'            reduce using rule 49
	'0'            reduce using rule 49
	':'            reduce using rule 49
	';'            reduce using rule 49
	'>'            reduce using rule 49
	']'            reduce using rule 49
	'cons'         reduce using rule 49
	'else'         reduce using rule 49
	'false'        reduce using rule 49
	'fix'          reduce using rule 49
	'head'         reduce using rule 49
	'in'           reduce using rule 49
	'isempty'      reduce using rule 49
	'iszero'       reduce using rule 49
	'pred'         reduce using rule 49
	'succ'         reduce using rule 49
	'tail'         reduce using rule 49
	'then'         reduce using rule 49
	'true'         reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	L_Ident        reduce using rule 49
	%eof           reduce using rule 49


State 29

	Expr2 -> 'fix' . Expr3                              (rule 45)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 98

State 30

	Expr -> 'fun' . '(' Ident ':' Type ')' '{' 'return' Expr '}'    (rule 22)

	'('            shift, and enter state 97


State 31

	Expr2 -> 'head' . Expr3                             (rule 39)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 96

State 32

	Expr -> 'if' . Expr 'then' Expr 'else' Expr         (rule 20)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 95
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 33

	Expr2 -> 'isempty' . Expr3                          (rule 40)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 94

State 34

	Expr2 -> 'iszero' . Expr3                           (rule 44)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 93

State 35

	Expr -> 'let' . Ident '=' Expr 'in' Expr            (rule 21)

	L_Ident        shift, and enter state 16

	Ident          goto state 92

State 36

	Expr -> 'match' . Expr1 '{' ListMatchCase '}'       (rule 25)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'head'         shift, and enter state 31
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr1          goto state 91
	Expr2          goto state 20
	Expr3          goto state 21

State 37

	Expr2 -> 'pred' . Expr3                             (rule 43)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 90

State 38

	Expr2 -> 'succ' . Expr3                             (rule 42)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 89

State 39

	Expr2 -> 'tail' . Expr3                             (rule 41)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 88

State 40

	Expr3 -> 'true' .                                   (rule 48)

	'('            reduce using rule 48
	')'            reduce using rule 48
	','            reduce using rule 48
	'.'            reduce using rule 48
	'0'            reduce using rule 48
	':'            reduce using rule 48
	';'            reduce using rule 48
	'>'            reduce using rule 48
	']'            reduce using rule 48
	'cons'         reduce using rule 48
	'else'         reduce using rule 48
	'false'        reduce using rule 48
	'fix'          reduce using rule 48
	'head'         reduce using rule 48
	'in'           reduce using rule 48
	'isempty'      reduce using rule 48
	'iszero'       reduce using rule 48
	'pred'         reduce using rule 48
	'succ'         reduce using rule 48
	'tail'         reduce using rule 48
	'then'         reduce using rule 48
	'true'         reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	L_Ident        reduce using rule 48
	%eof           reduce using rule 48


State 41

	Expr -> '{' . ListBinding '}'                       (rule 23)

	'}'            reduce using rule 33
	L_Ident        shift, and enter state 16

	Ident          goto state 60
	Binding        goto state 61
	ListBinding    goto state 87

State 42

	FieldType -> Ident . ':' Type                       (rule 63)

	':'            shift, and enter state 86


State 43

	ListFieldType -> FieldType .                        (rule 65)
	ListFieldType -> FieldType . ',' ListFieldType      (rule 66)

	','            shift, and enter state 85
	'>'            reduce using rule 65
	'}'            reduce using rule 65
	%eof           reduce using rule 65


State 44

	%start_pListFieldType -> ListFieldType .            (rule 13)

	%eof           accept


State 45

	%start_pFieldType -> FieldType .                    (rule 12)

	%eof           accept


State 46

	%start_pType1 -> Type1 .                            (rule 11)

	%eof           accept


State 47

	Type1 -> '(' . Type ')'                             (rule 62)

	'('            shift, and enter state 47
	'<'            shift, and enter state 54
	'Bool'         shift, and enter state 48
	'Bot'          shift, and enter state 49
	'Nat'          shift, and enter state 50
	'Top'          shift, and enter state 51
	'['            shift, and enter state 55
	'{'            shift, and enter state 56

	Type           goto state 84
	Type1          goto state 53

State 48

	Type1 -> 'Bool' .                                   (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	'->'           reduce using rule 58
	'>'            reduce using rule 58
	']'            reduce using rule 58
	'}'            reduce using rule 58
	%eof           reduce using rule 58


State 49

	Type1 -> 'Bot' .                                    (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	'->'           reduce using rule 61
	'>'            reduce using rule 61
	']'            reduce using rule 61
	'}'            reduce using rule 61
	%eof           reduce using rule 61


State 50

	Type1 -> 'Nat' .                                    (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	'->'           reduce using rule 59
	'>'            reduce using rule 59
	']'            reduce using rule 59
	'}'            reduce using rule 59
	%eof           reduce using rule 59


State 51

	Type1 -> 'Top' .                                    (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	'->'           reduce using rule 60
	'>'            reduce using rule 60
	']'            reduce using rule 60
	'}'            reduce using rule 60
	%eof           reduce using rule 60


State 52

	%start_pType -> Type .                              (rule 10)

	%eof           accept


State 53

	Type -> Type1 . '->' Type                           (rule 53)
	Type -> Type1 .                                     (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	'->'           shift, and enter state 83
	'>'            reduce using rule 57
	']'            reduce using rule 57
	'}'            reduce using rule 57
	%eof           reduce using rule 57


State 54

	Type -> '<' . ListFieldType '>'                     (rule 55)

	'>'            reduce using rule 64
	L_Ident        shift, and enter state 16

	Ident          goto state 42
	FieldType      goto state 43
	ListFieldType  goto state 82

State 55

	Type -> '[' . Type ']'                              (rule 56)

	'('            shift, and enter state 47
	'<'            shift, and enter state 54
	'Bool'         shift, and enter state 48
	'Bot'          shift, and enter state 49
	'Nat'          shift, and enter state 50
	'Top'          shift, and enter state 51
	'['            shift, and enter state 55
	'{'            shift, and enter state 56

	Type           goto state 81
	Type1          goto state 53

State 56

	Type -> '{' . ListFieldType '}'                     (rule 54)

	'}'            reduce using rule 64
	L_Ident        shift, and enter state 16

	Ident          goto state 42
	FieldType      goto state 43
	ListFieldType  goto state 80

State 57

	%start_pExpr3 -> Expr3 .                            (rule 9)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'.'            shift, and enter state 79
	%eof           accept


State 58

	%start_pExpr2 -> Expr2 .                            (rule 8)

	%eof           accept


State 59

	%start_pExpr1 -> Expr1 .                            (rule 7)
	Expr1 -> Expr1 . Expr2                              (rule 36)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'head'         shift, and enter state 31
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16
	%eof           accept

	Ident          goto state 17
	Expr2          goto state 78
	Expr3          goto state 21

State 60

	Binding -> Ident . '=' Expr                         (rule 32)

	'='            shift, and enter state 77


State 61

	ListBinding -> Binding .                            (rule 34)
	ListBinding -> Binding . ',' ListBinding            (rule 35)

	','            shift, and enter state 76
	'}'            reduce using rule 34
	%eof           reduce using rule 34


State 62

	%start_pListBinding -> ListBinding .                (rule 6)

	%eof           accept


State 63

	%start_pBinding -> Binding .                        (rule 5)

	%eof           accept


State 64

	ListMatchCase -> MatchCase .                        (rule 30)
	ListMatchCase -> MatchCase . ';' ListMatchCase      (rule 31)

	';'            shift, and enter state 75
	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 65

	%start_pListMatchCase -> ListMatchCase .            (rule 4)

	%eof           accept


State 66

	MatchCase -> '<' . Ident '=' Ident '>' '=>' Expr    (rule 28)

	L_Ident        shift, and enter state 16

	Ident          goto state 74

State 67

	%start_pMatchCase -> MatchCase .                    (rule 3)

	%eof           accept


State 68

	%start_pExpr -> Expr .                              (rule 2)

	%eof           accept


State 69

	%start_pListExpr -> ListExpr .                      (rule 1)

	%eof           accept


State 70

	ListExpr -> Expr .                                  (rule 18)
	ListExpr -> Expr . ';' ListExpr                     (rule 19)

	';'            shift, and enter state 73
	']'            reduce using rule 18
	%eof           reduce using rule 18


State 71

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 72

	Program -> ListExpr .                               (rule 16)

	%eof           reduce using rule 16


State 73

	ListExpr -> Expr ';' . ListExpr                     (rule 19)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	']'            reduce using rule 17
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16
	%eof           reduce using rule 17

	Ident          goto state 17
	ListExpr       goto state 126
	Expr           goto state 70
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 74

	MatchCase -> '<' Ident . '=' Ident '>' '=>' Expr    (rule 28)

	'='            shift, and enter state 125


State 75

	ListMatchCase -> MatchCase ';' . ListMatchCase      (rule 31)

	'<'            shift, and enter state 66
	'}'            reduce using rule 29
	%eof           reduce using rule 29

	MatchCase      goto state 64
	ListMatchCase  goto state 124

State 76

	ListBinding -> Binding ',' . ListBinding            (rule 35)

	'}'            reduce using rule 33
	L_Ident        shift, and enter state 16
	%eof           reduce using rule 33

	Ident          goto state 60
	Binding        goto state 61
	ListBinding    goto state 123

State 77

	Binding -> Ident '=' . Expr                         (rule 32)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 122
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 78

	Expr1 -> Expr1 Expr2 .                              (rule 36)

	'('            reduce using rule 36
	')'            reduce using rule 36
	','            reduce using rule 36
	'0'            reduce using rule 36
	':'            reduce using rule 36
	';'            reduce using rule 36
	'>'            reduce using rule 36
	']'            reduce using rule 36
	'cons'         reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'fix'          reduce using rule 36
	'head'         reduce using rule 36
	'in'           reduce using rule 36
	'isempty'      reduce using rule 36
	'iszero'       reduce using rule 36
	'pred'         reduce using rule 36
	'succ'         reduce using rule 36
	'tail'         reduce using rule 36
	'then'         reduce using rule 36
	'true'         reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_Ident        reduce using rule 36
	%eof           reduce using rule 36


State 79

	Expr3 -> Expr3 '.' . Ident                          (rule 47)

	L_Ident        shift, and enter state 16

	Ident          goto state 121

State 80

	Type -> '{' ListFieldType . '}'                     (rule 54)

	'}'            shift, and enter state 120


State 81

	Type -> '[' Type . ']'                              (rule 56)

	']'            shift, and enter state 119


State 82

	Type -> '<' ListFieldType . '>'                     (rule 55)

	'>'            shift, and enter state 118


State 83

	Type -> Type1 '->' . Type                           (rule 53)

	'('            shift, and enter state 47
	'<'            shift, and enter state 54
	'Bool'         shift, and enter state 48
	'Bot'          shift, and enter state 49
	'Nat'          shift, and enter state 50
	'Top'          shift, and enter state 51
	'['            shift, and enter state 55
	'{'            shift, and enter state 56

	Type           goto state 117
	Type1          goto state 53

State 84

	Type1 -> '(' Type . ')'                             (rule 62)

	')'            shift, and enter state 116


State 85

	ListFieldType -> FieldType ',' . ListFieldType      (rule 66)

	'>'            reduce using rule 64
	'}'            reduce using rule 64
	L_Ident        shift, and enter state 16
	%eof           reduce using rule 64

	Ident          goto state 42
	FieldType      goto state 43
	ListFieldType  goto state 115

State 86

	FieldType -> Ident ':' . Type                       (rule 63)

	'('            shift, and enter state 47
	'<'            shift, and enter state 54
	'Bool'         shift, and enter state 48
	'Bot'          shift, and enter state 49
	'Nat'          shift, and enter state 50
	'Top'          shift, and enter state 51
	'['            shift, and enter state 55
	'{'            shift, and enter state 56

	Type           goto state 114
	Type1          goto state 53

State 87

	Expr -> '{' ListBinding . '}'                       (rule 23)

	'}'            shift, and enter state 113


State 88

	Expr2 -> 'tail' Expr3 .                             (rule 41)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 41
	')'            reduce using rule 41
	','            reduce using rule 41
	'.'            shift, and enter state 79
	'0'            reduce using rule 41
	':'            reduce using rule 41
	';'            reduce using rule 41
	'>'            reduce using rule 41
	']'            reduce using rule 41
	'cons'         reduce using rule 41
	'else'         reduce using rule 41
	'false'        reduce using rule 41
	'fix'          reduce using rule 41
	'head'         reduce using rule 41
	'in'           reduce using rule 41
	'isempty'      reduce using rule 41
	'iszero'       reduce using rule 41
	'pred'         reduce using rule 41
	'succ'         reduce using rule 41
	'tail'         reduce using rule 41
	'then'         reduce using rule 41
	'true'         reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	%eof           reduce using rule 41


State 89

	Expr2 -> 'succ' Expr3 .                             (rule 42)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 42
	')'            reduce using rule 42
	','            reduce using rule 42
	'.'            shift, and enter state 79
	'0'            reduce using rule 42
	':'            reduce using rule 42
	';'            reduce using rule 42
	'>'            reduce using rule 42
	']'            reduce using rule 42
	'cons'         reduce using rule 42
	'else'         reduce using rule 42
	'false'        reduce using rule 42
	'fix'          reduce using rule 42
	'head'         reduce using rule 42
	'in'           reduce using rule 42
	'isempty'      reduce using rule 42
	'iszero'       reduce using rule 42
	'pred'         reduce using rule 42
	'succ'         reduce using rule 42
	'tail'         reduce using rule 42
	'then'         reduce using rule 42
	'true'         reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_Ident        reduce using rule 42
	%eof           reduce using rule 42


State 90

	Expr2 -> 'pred' Expr3 .                             (rule 43)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	'.'            shift, and enter state 79
	'0'            reduce using rule 43
	':'            reduce using rule 43
	';'            reduce using rule 43
	'>'            reduce using rule 43
	']'            reduce using rule 43
	'cons'         reduce using rule 43
	'else'         reduce using rule 43
	'false'        reduce using rule 43
	'fix'          reduce using rule 43
	'head'         reduce using rule 43
	'in'           reduce using rule 43
	'isempty'      reduce using rule 43
	'iszero'       reduce using rule 43
	'pred'         reduce using rule 43
	'succ'         reduce using rule 43
	'tail'         reduce using rule 43
	'then'         reduce using rule 43
	'true'         reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	L_Ident        reduce using rule 43
	%eof           reduce using rule 43


State 91

	Expr -> 'match' Expr1 . '{' ListMatchCase '}'       (rule 25)
	Expr1 -> Expr1 . Expr2                              (rule 36)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'head'         shift, and enter state 31
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 112
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr2          goto state 78
	Expr3          goto state 21

State 92

	Expr -> 'let' Ident . '=' Expr 'in' Expr            (rule 21)

	'='            shift, and enter state 111


State 93

	Expr2 -> 'iszero' Expr3 .                           (rule 44)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 44
	')'            reduce using rule 44
	','            reduce using rule 44
	'.'            shift, and enter state 79
	'0'            reduce using rule 44
	':'            reduce using rule 44
	';'            reduce using rule 44
	'>'            reduce using rule 44
	']'            reduce using rule 44
	'cons'         reduce using rule 44
	'else'         reduce using rule 44
	'false'        reduce using rule 44
	'fix'          reduce using rule 44
	'head'         reduce using rule 44
	'in'           reduce using rule 44
	'isempty'      reduce using rule 44
	'iszero'       reduce using rule 44
	'pred'         reduce using rule 44
	'succ'         reduce using rule 44
	'tail'         reduce using rule 44
	'then'         reduce using rule 44
	'true'         reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	L_Ident        reduce using rule 44
	%eof           reduce using rule 44


State 94

	Expr2 -> 'isempty' Expr3 .                          (rule 40)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 40
	')'            reduce using rule 40
	','            reduce using rule 40
	'.'            shift, and enter state 79
	'0'            reduce using rule 40
	':'            reduce using rule 40
	';'            reduce using rule 40
	'>'            reduce using rule 40
	']'            reduce using rule 40
	'cons'         reduce using rule 40
	'else'         reduce using rule 40
	'false'        reduce using rule 40
	'fix'          reduce using rule 40
	'head'         reduce using rule 40
	'in'           reduce using rule 40
	'isempty'      reduce using rule 40
	'iszero'       reduce using rule 40
	'pred'         reduce using rule 40
	'succ'         reduce using rule 40
	'tail'         reduce using rule 40
	'then'         reduce using rule 40
	'true'         reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	%eof           reduce using rule 40


State 95

	Expr -> 'if' Expr . 'then' Expr 'else' Expr         (rule 20)

	'then'         shift, and enter state 110


State 96

	Expr2 -> 'head' Expr3 .                             (rule 39)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 39
	')'            reduce using rule 39
	','            reduce using rule 39
	'.'            shift, and enter state 79
	'0'            reduce using rule 39
	':'            reduce using rule 39
	';'            reduce using rule 39
	'>'            reduce using rule 39
	']'            reduce using rule 39
	'cons'         reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'fix'          reduce using rule 39
	'head'         reduce using rule 39
	'in'           reduce using rule 39
	'isempty'      reduce using rule 39
	'iszero'       reduce using rule 39
	'pred'         reduce using rule 39
	'succ'         reduce using rule 39
	'tail'         reduce using rule 39
	'then'         reduce using rule 39
	'true'         reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	%eof           reduce using rule 39


State 97

	Expr -> 'fun' '(' . Ident ':' Type ')' '{' 'return' Expr '}'    (rule 22)

	L_Ident        shift, and enter state 16

	Ident          goto state 109

State 98

	Expr2 -> 'fix' Expr3 .                              (rule 45)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 45
	')'            reduce using rule 45
	','            reduce using rule 45
	'.'            shift, and enter state 79
	'0'            reduce using rule 45
	':'            reduce using rule 45
	';'            reduce using rule 45
	'>'            reduce using rule 45
	']'            reduce using rule 45
	'cons'         reduce using rule 45
	'else'         reduce using rule 45
	'false'        reduce using rule 45
	'fix'          reduce using rule 45
	'head'         reduce using rule 45
	'in'           reduce using rule 45
	'isempty'      reduce using rule 45
	'iszero'       reduce using rule 45
	'pred'         reduce using rule 45
	'succ'         reduce using rule 45
	'tail'         reduce using rule 45
	'then'         reduce using rule 45
	'true'         reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	L_Ident        reduce using rule 45
	%eof           reduce using rule 45


State 99

	Expr2 -> 'cons' Expr3 . Expr3                       (rule 38)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            shift, and enter state 23
	'.'            shift, and enter state 79
	'0'            shift, and enter state 24
	'false'        shift, and enter state 28
	'true'         shift, and enter state 40
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr3          goto state 108

State 100

	Expr -> '[' ListExpr . ']'                          (rule 26)

	']'            shift, and enter state 107


State 101

	Expr -> '<' Ident . '=' Expr '>'                    (rule 24)

	'='            shift, and enter state 106


State 102

	Expr3 -> '(' Expr . ')'                             (rule 52)

	')'            shift, and enter state 105


State 103

	Typing -> Expr ':' . Type                           (rule 67)

	'('            shift, and enter state 47
	'<'            shift, and enter state 54
	'Bool'         shift, and enter state 48
	'Bot'          shift, and enter state 49
	'Nat'          shift, and enter state 50
	'Top'          shift, and enter state 51
	'['            shift, and enter state 55
	'{'            shift, and enter state 56

	Type           goto state 104
	Type1          goto state 53

State 104

	Typing -> Expr ':' Type .                           (rule 67)

	%eof           reduce using rule 67


State 105

	Expr3 -> '(' Expr ')' .                             (rule 52)

	'('            reduce using rule 52
	')'            reduce using rule 52
	','            reduce using rule 52
	'.'            reduce using rule 52
	'0'            reduce using rule 52
	':'            reduce using rule 52
	';'            reduce using rule 52
	'>'            reduce using rule 52
	']'            reduce using rule 52
	'cons'         reduce using rule 52
	'else'         reduce using rule 52
	'false'        reduce using rule 52
	'fix'          reduce using rule 52
	'head'         reduce using rule 52
	'in'           reduce using rule 52
	'isempty'      reduce using rule 52
	'iszero'       reduce using rule 52
	'pred'         reduce using rule 52
	'succ'         reduce using rule 52
	'tail'         reduce using rule 52
	'then'         reduce using rule 52
	'true'         reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	L_Ident        reduce using rule 52
	%eof           reduce using rule 52


State 106

	Expr -> '<' Ident '=' . Expr '>'                    (rule 24)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 132
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 107

	Expr -> '[' ListExpr ']' .                          (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26
	':'            reduce using rule 26
	';'            reduce using rule 26
	'>'            reduce using rule 26
	']'            reduce using rule 26
	'else'         reduce using rule 26
	'in'           reduce using rule 26
	'then'         reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 108

	Expr2 -> 'cons' Expr3 Expr3 .                       (rule 38)
	Expr3 -> Expr3 . '.' Ident                          (rule 47)

	'('            reduce using rule 38
	')'            reduce using rule 38
	','            reduce using rule 38
	'.'            shift, and enter state 79
	'0'            reduce using rule 38
	':'            reduce using rule 38
	';'            reduce using rule 38
	'>'            reduce using rule 38
	']'            reduce using rule 38
	'cons'         reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'fix'          reduce using rule 38
	'head'         reduce using rule 38
	'in'           reduce using rule 38
	'isempty'      reduce using rule 38
	'iszero'       reduce using rule 38
	'pred'         reduce using rule 38
	'succ'         reduce using rule 38
	'tail'         reduce using rule 38
	'then'         reduce using rule 38
	'true'         reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	%eof           reduce using rule 38


State 109

	Expr -> 'fun' '(' Ident . ':' Type ')' '{' 'return' Expr '}'    (rule 22)

	':'            shift, and enter state 131


State 110

	Expr -> 'if' Expr 'then' . Expr 'else' Expr         (rule 20)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 130
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 111

	Expr -> 'let' Ident '=' . Expr 'in' Expr            (rule 21)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 129
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 112

	Expr -> 'match' Expr1 '{' . ListMatchCase '}'       (rule 25)

	'<'            shift, and enter state 66
	'}'            reduce using rule 29

	MatchCase      goto state 64
	ListMatchCase  goto state 128

State 113

	Expr -> '{' ListBinding '}' .                       (rule 23)

	')'            reduce using rule 23
	','            reduce using rule 23
	':'            reduce using rule 23
	';'            reduce using rule 23
	'>'            reduce using rule 23
	']'            reduce using rule 23
	'else'         reduce using rule 23
	'in'           reduce using rule 23
	'then'         reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 114

	FieldType -> Ident ':' Type .                       (rule 63)

	','            reduce using rule 63
	'>'            reduce using rule 63
	'}'            reduce using rule 63
	%eof           reduce using rule 63


State 115

	ListFieldType -> FieldType ',' ListFieldType .      (rule 66)

	'>'            reduce using rule 66
	'}'            reduce using rule 66
	%eof           reduce using rule 66


State 116

	Type1 -> '(' Type ')' .                             (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	'->'           reduce using rule 62
	'>'            reduce using rule 62
	']'            reduce using rule 62
	'}'            reduce using rule 62
	%eof           reduce using rule 62


State 117

	Type -> Type1 '->' Type .                           (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	'>'            reduce using rule 53
	']'            reduce using rule 53
	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 118

	Type -> '<' ListFieldType '>' .                     (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	'>'            reduce using rule 55
	']'            reduce using rule 55
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 119

	Type -> '[' Type ']' .                              (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	'>'            reduce using rule 56
	']'            reduce using rule 56
	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 120

	Type -> '{' ListFieldType '}' .                     (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	'>'            reduce using rule 54
	']'            reduce using rule 54
	'}'            reduce using rule 54
	%eof           reduce using rule 54


State 121

	Expr3 -> Expr3 '.' Ident .                          (rule 47)

	'('            reduce using rule 47
	')'            reduce using rule 47
	','            reduce using rule 47
	'.'            reduce using rule 47
	'0'            reduce using rule 47
	':'            reduce using rule 47
	';'            reduce using rule 47
	'>'            reduce using rule 47
	']'            reduce using rule 47
	'cons'         reduce using rule 47
	'else'         reduce using rule 47
	'false'        reduce using rule 47
	'fix'          reduce using rule 47
	'head'         reduce using rule 47
	'in'           reduce using rule 47
	'isempty'      reduce using rule 47
	'iszero'       reduce using rule 47
	'pred'         reduce using rule 47
	'succ'         reduce using rule 47
	'tail'         reduce using rule 47
	'then'         reduce using rule 47
	'true'         reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	L_Ident        reduce using rule 47
	%eof           reduce using rule 47


State 122

	Binding -> Ident '=' Expr .                         (rule 32)

	','            reduce using rule 32
	'}'            reduce using rule 32
	%eof           reduce using rule 32


State 123

	ListBinding -> Binding ',' ListBinding .            (rule 35)

	'}'            reduce using rule 35
	%eof           reduce using rule 35


State 124

	ListMatchCase -> MatchCase ';' ListMatchCase .      (rule 31)

	'}'            reduce using rule 31
	%eof           reduce using rule 31


State 125

	MatchCase -> '<' Ident '=' . Ident '>' '=>' Expr    (rule 28)

	L_Ident        shift, and enter state 16

	Ident          goto state 127

State 126

	ListExpr -> Expr ';' ListExpr .                     (rule 19)

	']'            reduce using rule 19
	%eof           reduce using rule 19


State 127

	MatchCase -> '<' Ident '=' Ident . '>' '=>' Expr    (rule 28)

	'>'            shift, and enter state 138


State 128

	Expr -> 'match' Expr1 '{' ListMatchCase . '}'       (rule 25)

	'}'            shift, and enter state 137


State 129

	Expr -> 'let' Ident '=' Expr . 'in' Expr            (rule 21)

	'in'           shift, and enter state 136


State 130

	Expr -> 'if' Expr 'then' Expr . 'else' Expr         (rule 20)

	'else'         shift, and enter state 135


State 131

	Expr -> 'fun' '(' Ident ':' . Type ')' '{' 'return' Expr '}'    (rule 22)

	'('            shift, and enter state 47
	'<'            shift, and enter state 54
	'Bool'         shift, and enter state 48
	'Bot'          shift, and enter state 49
	'Nat'          shift, and enter state 50
	'Top'          shift, and enter state 51
	'['            shift, and enter state 55
	'{'            shift, and enter state 56

	Type           goto state 134
	Type1          goto state 53

State 132

	Expr -> '<' Ident '=' Expr . '>'                    (rule 24)

	'>'            shift, and enter state 133


State 133

	Expr -> '<' Ident '=' Expr '>' .                    (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24
	':'            reduce using rule 24
	';'            reduce using rule 24
	'>'            reduce using rule 24
	']'            reduce using rule 24
	'else'         reduce using rule 24
	'in'           reduce using rule 24
	'then'         reduce using rule 24
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 134

	Expr -> 'fun' '(' Ident ':' Type . ')' '{' 'return' Expr '}'    (rule 22)

	')'            shift, and enter state 142


State 135

	Expr -> 'if' Expr 'then' Expr 'else' . Expr         (rule 20)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 141
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 136

	Expr -> 'let' Ident '=' Expr 'in' . Expr            (rule 21)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 140
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 137

	Expr -> 'match' Expr1 '{' ListMatchCase '}' .       (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25
	':'            reduce using rule 25
	';'            reduce using rule 25
	'>'            reduce using rule 25
	']'            reduce using rule 25
	'else'         reduce using rule 25
	'in'           reduce using rule 25
	'then'         reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 138

	MatchCase -> '<' Ident '=' Ident '>' . '=>' Expr    (rule 28)

	'=>'           shift, and enter state 139


State 139

	MatchCase -> '<' Ident '=' Ident '>' '=>' . Expr    (rule 28)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 144
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 140

	Expr -> 'let' Ident '=' Expr 'in' Expr .            (rule 21)

	')'            reduce using rule 21
	','            reduce using rule 21
	':'            reduce using rule 21
	';'            reduce using rule 21
	'>'            reduce using rule 21
	']'            reduce using rule 21
	'else'         reduce using rule 21
	'in'           reduce using rule 21
	'then'         reduce using rule 21
	'}'            reduce using rule 21
	%eof           reduce using rule 21


State 141

	Expr -> 'if' Expr 'then' Expr 'else' Expr .         (rule 20)

	')'            reduce using rule 20
	','            reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'>'            reduce using rule 20
	']'            reduce using rule 20
	'else'         reduce using rule 20
	'in'           reduce using rule 20
	'then'         reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 142

	Expr -> 'fun' '(' Ident ':' Type ')' . '{' 'return' Expr '}'    (rule 22)

	'{'            shift, and enter state 143


State 143

	Expr -> 'fun' '(' Ident ':' Type ')' '{' . 'return' Expr '}'    (rule 22)

	'return'       shift, and enter state 145


State 144

	MatchCase -> '<' Ident '=' Ident '>' '=>' Expr .    (rule 28)

	';'            reduce using rule 28
	'}'            reduce using rule 28
	%eof           reduce using rule 28


State 145

	Expr -> 'fun' '(' Ident ':' Type ')' '{' 'return' . Expr '}'    (rule 22)

	'('            shift, and enter state 23
	'0'            shift, and enter state 24
	'<'            shift, and enter state 25
	'['            shift, and enter state 26
	'cons'         shift, and enter state 27
	'false'        shift, and enter state 28
	'fix'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'head'         shift, and enter state 31
	'if'           shift, and enter state 32
	'isempty'      shift, and enter state 33
	'iszero'       shift, and enter state 34
	'let'          shift, and enter state 35
	'match'        shift, and enter state 36
	'pred'         shift, and enter state 37
	'succ'         shift, and enter state 38
	'tail'         shift, and enter state 39
	'true'         shift, and enter state 40
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 16

	Ident          goto state 17
	Expr           goto state 146
	Expr1          goto state 19
	Expr2          goto state 20
	Expr3          goto state 21

State 146

	Expr -> 'fun' '(' Ident ':' Type ')' '{' 'return' Expr . '}'    (rule 22)

	'}'            shift, and enter state 147


State 147

	Expr -> 'fun' '(' Ident ':' Type ')' '{' 'return' Expr '}' .    (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22
	':'            reduce using rule 22
	';'            reduce using rule 22
	'>'            reduce using rule 22
	']'            reduce using rule 22
	'else'         reduce using rule 22
	'in'           reduce using rule 22
	'then'         reduce using rule 22
	'}'            reduce using rule 22
	%eof           reduce using rule 22


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 68
Number of terminals: 39
Number of non-terminals: 31
Number of states: 148
