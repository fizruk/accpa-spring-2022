-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Syntax/Normal/Par.y
-----------------------------------------------------------------------------

state 21 contains 1 shift/reduce conflicts and 4 reduce/reduce conflicts.
state 65 contains 1 shift/reduce conflicts.

rule 21 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pExpr -> Expr                               (1)
	%start_pExpr0 -> Expr0                             (2)
	%start_pListExpr0 -> ListExpr0                     (3)
	%start_pExpr1 -> Expr1                             (4)
	%start_pExpr2 -> Expr2                             (5)
	%start_pExpr3 -> Expr3                             (6)
	%start_pStore -> Store                             (7)
	%start_pAssignment -> Assignment                   (8)
	%start_pListAssignment -> ListAssignment           (9)
	%start_pStoreTyping -> StoreTyping                 (10)
	%start_pLocationTyping -> LocationTyping           (11)
	%start_pListLocationTyping -> ListLocationTyping   (12)
	%start_pType -> Type                               (13)
	%start_pType1 -> Type1                             (14)
	%start_pType2 -> Type2                             (15)
	%start_pTyping -> Typing                           (16)
	Ident -> L_Ident                                   (17)
	Integer -> L_integ                                 (18)
	Program -> Expr                                    (19)
	Expr -> ListExpr0                                  (20)
	Expr -> Expr0                                      (21)
	Expr0 -> 'if' Expr0 'then' Expr0 'else' Expr0      (22)
	Expr0 -> 'fun' '(' Ident ':' Type ')' '{' 'return' Expr0 '}'   (23)
	Expr0 -> Expr1 ':=' Expr0                          (24)
	Expr0 -> Expr1                                     (25)
	ListExpr0 ->                                       (26)
	ListExpr0 -> Expr0                                 (27)
	ListExpr0 -> Expr0 ';' ListExpr0                   (28)
	Expr1 -> Expr1 Expr2                               (29)
	Expr1 -> Expr2                                     (30)
	Expr2 -> 'ref' Expr3                               (31)
	Expr2 -> '!' Expr3                                 (32)
	Expr2 -> 'succ' Expr3                              (33)
	Expr2 -> 'pred' Expr3                              (34)
	Expr2 -> 'iszero' Expr3                            (35)
	Expr2 -> Expr3                                     (36)
	Expr3 -> 'unit'                                    (37)
	Expr3 -> 'true'                                    (38)
	Expr3 -> 'false'                                   (39)
	Expr3 -> '0'                                       (40)
	Expr3 -> Ident                                     (41)
	Expr3 -> '#' Integer                               (42)
	Expr3 -> '(' Expr ')'                              (43)
	Store -> '{' ListAssignment '}'                    (44)
	Assignment -> '#' Integer '=' Expr                 (45)
	ListAssignment ->                                  (46)
	ListAssignment -> Assignment                       (47)
	ListAssignment -> Assignment ';' ListAssignment    (48)
	StoreTyping -> '{' ListLocationTyping '}'          (49)
	LocationTyping -> '#' Integer ':' Type             (50)
	ListLocationTyping ->                              (51)
	ListLocationTyping -> LocationTyping               (52)
	ListLocationTyping -> LocationTyping ';' ListLocationTyping   (53)
	Type -> Type1 '->' Type                            (54)
	Type -> Type1                                      (55)
	Type1 -> 'Ref' Type2                               (56)
	Type1 -> Type2                                     (57)
	Type2 -> 'Bool'                                    (58)
	Type2 -> 'Nat'                                     (59)
	Type2 -> 'Unit'                                    (60)
	Type2 -> '(' Type ')'                              (61)
	Typing -> Expr ':' Type                            (62)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'#'            { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'->'           { PT _ (TS _ 5) }
	'0'            { PT _ (TS _ 6) }
	':'            { PT _ (TS _ 7) }
	':='           { PT _ (TS _ 8) }
	';'            { PT _ (TS _ 9) }
	'='            { PT _ (TS _ 10) }
	'Bool'         { PT _ (TS _ 11) }
	'Nat'          { PT _ (TS _ 12) }
	'Ref'          { PT _ (TS _ 13) }
	'Unit'         { PT _ (TS _ 14) }
	'else'         { PT _ (TS _ 15) }
	'false'        { PT _ (TS _ 16) }
	'fun'          { PT _ (TS _ 17) }
	'if'           { PT _ (TS _ 18) }
	'iszero'       { PT _ (TS _ 19) }
	'pred'         { PT _ (TS _ 20) }
	'ref'          { PT _ (TS _ 21) }
	'return'       { PT _ (TS _ 22) }
	'succ'         { PT _ (TS _ 23) }
	'then'         { PT _ (TS _ 24) }
	'true'         { PT _ (TS _ 25) }
	'unit'         { PT _ (TS _ 26) }
	'{'            { PT _ (TS _ 27) }
	'}'            { PT _ (TS _ 28) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pExpr    rule  1
	%start_pExpr0   rule  2
	%start_pListExpr0 rule  3
	%start_pExpr1   rule  4
	%start_pExpr2   rule  5
	%start_pExpr3   rule  6
	%start_pStore   rule  7
	%start_pAssignment rule  8
	%start_pListAssignment rule  9
	%start_pStoreTyping rule  10
	%start_pLocationTyping rule  11
	%start_pListLocationTyping rule  12
	%start_pType    rule  13
	%start_pType1   rule  14
	%start_pType2   rule  15
	%start_pTyping  rule  16
	Ident           rule  17
	Integer         rule  18
	Program         rule  19
	Expr            rules 20, 21
	Expr0           rules 22, 23, 24, 25
	ListExpr0       rules 26, 27, 28
	Expr1           rules 29, 30
	Expr2           rules 31, 32, 33, 34, 35, 36
	Expr3           rules 37, 38, 39, 40, 41, 42, 43
	Store           rule  44
	Assignment      rule  45
	ListAssignment  rules 46, 47, 48
	StoreTyping     rule  49
	LocationTyping  rule  50
	ListLocationTyping rules 51, 52, 53
	Type            rules 54, 55
	Type1           rules 56, 57
	Type2           rules 58, 59, 60, 61
	Typing          rule  62

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18
	%eof           reduce using rule 26

	Ident          goto state 19
	Program        goto state 69
	Expr           goto state 70
	Expr0          goto state 21
	ListExpr0      goto state 22
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 1

	%start_pExpr -> . Expr                              (rule 1)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18
	%eof           reduce using rule 26

	Ident          goto state 19
	Expr           goto state 68
	Expr0          goto state 21
	ListExpr0      goto state 22
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 2

	%start_pExpr0 -> . Expr0                            (rule 2)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr0          goto state 67
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 3

	%start_pListExpr0 -> . ListExpr0                    (rule 3)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18
	%eof           reduce using rule 26

	Ident          goto state 19
	Expr0          goto state 65
	ListExpr0      goto state 66
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 4

	%start_pExpr1 -> . Expr1                            (rule 4)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr1          goto state 64
	Expr2          goto state 24
	Expr3          goto state 25

State 5

	%start_pExpr2 -> . Expr2                            (rule 5)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr2          goto state 63
	Expr3          goto state 25

State 6

	%start_pExpr3 -> . Expr3                            (rule 6)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr3          goto state 62

State 7

	%start_pStore -> . Store                            (rule 7)

	'{'            shift, and enter state 61

	Store          goto state 60

State 8

	%start_pAssignment -> . Assignment                  (rule 8)

	'#'            shift, and enter state 58

	Assignment     goto state 59

State 9

	%start_pListAssignment -> . ListAssignment          (rule 9)

	'#'            shift, and enter state 58
	%eof           reduce using rule 46

	Assignment     goto state 56
	ListAssignment goto state 57

State 10

	%start_pStoreTyping -> . StoreTyping                (rule 10)

	'{'            shift, and enter state 55

	StoreTyping    goto state 54

State 11

	%start_pLocationTyping -> . LocationTyping          (rule 11)

	'#'            shift, and enter state 52

	LocationTyping goto state 53

State 12

	%start_pListLocationTyping -> . ListLocationTyping    (rule 12)

	'#'            shift, and enter state 52
	%eof           reduce using rule 51

	LocationTyping goto state 50
	ListLocationTypinggoto state 51

State 13

	%start_pType -> . Type                              (rule 13)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Ref'          shift, and enter state 47
	'Unit'         shift, and enter state 44

	Type           goto state 48
	Type1          goto state 49
	Type2          goto state 46

State 14

	%start_pType1 -> . Type1                            (rule 14)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Ref'          shift, and enter state 47
	'Unit'         shift, and enter state 44

	Type1          goto state 45
	Type2          goto state 46

State 15

	%start_pType2 -> . Type2                            (rule 15)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Unit'         shift, and enter state 44

	Type2          goto state 40

State 16

	%start_pTyping -> . Typing                          (rule 16)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	':'            reduce using rule 26
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr           goto state 20
	Expr0          goto state 21
	ListExpr0      goto state 22
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25
	Typing         goto state 26

State 17

	Ident -> . L_Ident                                  (rule 17)

	L_Ident        shift, and enter state 18


State 18

	Ident -> L_Ident .                                  (rule 17)

	'!'            reduce using rule 17
	'#'            reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'0'            reduce using rule 17
	':'            reduce using rule 17
	':='           reduce using rule 17
	';'            reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'iszero'       reduce using rule 17
	'pred'         reduce using rule 17
	'ref'          reduce using rule 17
	'succ'         reduce using rule 17
	'then'         reduce using rule 17
	'true'         reduce using rule 17
	'unit'         reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	%eof           reduce using rule 17


State 19

	Expr3 -> Ident .                                    (rule 41)

	'!'            reduce using rule 41
	'#'            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'0'            reduce using rule 41
	':'            reduce using rule 41
	':='           reduce using rule 41
	';'            reduce using rule 41
	'else'         reduce using rule 41
	'false'        reduce using rule 41
	'iszero'       reduce using rule 41
	'pred'         reduce using rule 41
	'ref'          reduce using rule 41
	'succ'         reduce using rule 41
	'then'         reduce using rule 41
	'true'         reduce using rule 41
	'unit'         reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	%eof           reduce using rule 41


State 20

	Typing -> Expr . ':' Type                           (rule 62)

	':'            shift, and enter state 93


State 21

	Expr -> Expr0 .                                     (rule 21)
	ListExpr0 -> Expr0 .                                (rule 27)
	ListExpr0 -> Expr0 . ';' ListExpr0                  (rule 28)

	')'            reduce using rule 27
			(reduce using rule 21)

	':'            reduce using rule 27
			(reduce using rule 21)

	';'            shift, and enter state 71
			(reduce using rule 27)
			(reduce using rule 21)

	'}'            reduce using rule 27
			(reduce using rule 21)

	%eof           reduce using rule 27
			(reduce using rule 21)



State 22

	Expr -> ListExpr0 .                                 (rule 20)

	')'            reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 23

	Expr0 -> Expr1 . ':=' Expr0                         (rule 24)
	Expr0 -> Expr1 .                                    (rule 25)
	Expr1 -> Expr1 . Expr2                              (rule 29)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            reduce using rule 25
	'0'            shift, and enter state 30
	':'            reduce using rule 25
	':='           shift, and enter state 92
	';'            reduce using rule 25
	'else'         reduce using rule 25
	'false'        shift, and enter state 31
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'then'         reduce using rule 25
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	'}'            reduce using rule 25
	L_Ident        shift, and enter state 18
	%eof           reduce using rule 25

	Ident          goto state 19
	Expr2          goto state 72
	Expr3          goto state 25

State 24

	Expr1 -> Expr2 .                                    (rule 30)

	'!'            reduce using rule 30
	'#'            reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'0'            reduce using rule 30
	':'            reduce using rule 30
	':='           reduce using rule 30
	';'            reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'iszero'       reduce using rule 30
	'pred'         reduce using rule 30
	'ref'          reduce using rule 30
	'succ'         reduce using rule 30
	'then'         reduce using rule 30
	'true'         reduce using rule 30
	'unit'         reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	%eof           reduce using rule 30


State 25

	Expr2 -> Expr3 .                                    (rule 36)

	'!'            reduce using rule 36
	'#'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'0'            reduce using rule 36
	':'            reduce using rule 36
	':='           reduce using rule 36
	';'            reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'iszero'       reduce using rule 36
	'pred'         reduce using rule 36
	'ref'          reduce using rule 36
	'succ'         reduce using rule 36
	'then'         reduce using rule 36
	'true'         reduce using rule 36
	'unit'         reduce using rule 36
	'}'            reduce using rule 36
	L_Ident        reduce using rule 36
	%eof           reduce using rule 36


State 26

	%start_pTyping -> Typing .                          (rule 16)

	%eof           accept


State 27

	Expr2 -> '!' . Expr3                                (rule 32)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr3          goto state 91

State 28

	Expr3 -> '#' . Integer                              (rule 42)

	L_integ        shift, and enter state 75

	Integer        goto state 90

State 29

	Expr3 -> '(' . Expr ')'                             (rule 43)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            reduce using rule 26
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr           goto state 89
	Expr0          goto state 21
	ListExpr0      goto state 22
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 30

	Expr3 -> '0' .                                      (rule 40)

	'!'            reduce using rule 40
	'#'            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'0'            reduce using rule 40
	':'            reduce using rule 40
	':='           reduce using rule 40
	';'            reduce using rule 40
	'else'         reduce using rule 40
	'false'        reduce using rule 40
	'iszero'       reduce using rule 40
	'pred'         reduce using rule 40
	'ref'          reduce using rule 40
	'succ'         reduce using rule 40
	'then'         reduce using rule 40
	'true'         reduce using rule 40
	'unit'         reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	%eof           reduce using rule 40


State 31

	Expr3 -> 'false' .                                  (rule 39)

	'!'            reduce using rule 39
	'#'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'0'            reduce using rule 39
	':'            reduce using rule 39
	':='           reduce using rule 39
	';'            reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'iszero'       reduce using rule 39
	'pred'         reduce using rule 39
	'ref'          reduce using rule 39
	'succ'         reduce using rule 39
	'then'         reduce using rule 39
	'true'         reduce using rule 39
	'unit'         reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	%eof           reduce using rule 39


State 32

	Expr0 -> 'fun' . '(' Ident ':' Type ')' '{' 'return' Expr0 '}'    (rule 23)

	'('            shift, and enter state 88


State 33

	Expr0 -> 'if' . Expr0 'then' Expr0 'else' Expr0     (rule 22)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr0          goto state 87
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 34

	Expr2 -> 'iszero' . Expr3                           (rule 35)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr3          goto state 86

State 35

	Expr2 -> 'pred' . Expr3                             (rule 34)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr3          goto state 85

State 36

	Expr2 -> 'ref' . Expr3                              (rule 31)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr3          goto state 84

State 37

	Expr2 -> 'succ' . Expr3                             (rule 33)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr3          goto state 83

State 38

	Expr3 -> 'true' .                                   (rule 38)

	'!'            reduce using rule 38
	'#'            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'0'            reduce using rule 38
	':'            reduce using rule 38
	':='           reduce using rule 38
	';'            reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'iszero'       reduce using rule 38
	'pred'         reduce using rule 38
	'ref'          reduce using rule 38
	'succ'         reduce using rule 38
	'then'         reduce using rule 38
	'true'         reduce using rule 38
	'unit'         reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	%eof           reduce using rule 38


State 39

	Expr3 -> 'unit' .                                   (rule 37)

	'!'            reduce using rule 37
	'#'            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'0'            reduce using rule 37
	':'            reduce using rule 37
	':='           reduce using rule 37
	';'            reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'iszero'       reduce using rule 37
	'pred'         reduce using rule 37
	'ref'          reduce using rule 37
	'succ'         reduce using rule 37
	'then'         reduce using rule 37
	'true'         reduce using rule 37
	'unit'         reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	%eof           reduce using rule 37


State 40

	%start_pType2 -> Type2 .                            (rule 15)

	%eof           accept


State 41

	Type2 -> '(' . Type ')'                             (rule 61)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Ref'          shift, and enter state 47
	'Unit'         shift, and enter state 44

	Type           goto state 82
	Type1          goto state 49
	Type2          goto state 46

State 42

	Type2 -> 'Bool' .                                   (rule 58)

	')'            reduce using rule 58
	'->'           reduce using rule 58
	';'            reduce using rule 58
	'}'            reduce using rule 58
	%eof           reduce using rule 58


State 43

	Type2 -> 'Nat' .                                    (rule 59)

	')'            reduce using rule 59
	'->'           reduce using rule 59
	';'            reduce using rule 59
	'}'            reduce using rule 59
	%eof           reduce using rule 59


State 44

	Type2 -> 'Unit' .                                   (rule 60)

	')'            reduce using rule 60
	'->'           reduce using rule 60
	';'            reduce using rule 60
	'}'            reduce using rule 60
	%eof           reduce using rule 60


State 45

	%start_pType1 -> Type1 .                            (rule 14)

	%eof           accept


State 46

	Type1 -> Type2 .                                    (rule 57)

	')'            reduce using rule 57
	'->'           reduce using rule 57
	';'            reduce using rule 57
	'}'            reduce using rule 57
	%eof           reduce using rule 57


State 47

	Type1 -> 'Ref' . Type2                              (rule 56)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Unit'         shift, and enter state 44

	Type2          goto state 81

State 48

	%start_pType -> Type .                              (rule 13)

	%eof           accept


State 49

	Type -> Type1 . '->' Type                           (rule 54)
	Type -> Type1 .                                     (rule 55)

	')'            reduce using rule 55
	'->'           shift, and enter state 80
	';'            reduce using rule 55
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 50

	ListLocationTyping -> LocationTyping .              (rule 52)
	ListLocationTyping -> LocationTyping . ';' ListLocationTyping    (rule 53)

	';'            shift, and enter state 79
	'}'            reduce using rule 52
	%eof           reduce using rule 52


State 51

	%start_pListLocationTyping -> ListLocationTyping .    (rule 12)

	%eof           accept


State 52

	LocationTyping -> '#' . Integer ':' Type            (rule 50)

	L_integ        shift, and enter state 75

	Integer        goto state 78

State 53

	%start_pLocationTyping -> LocationTyping .          (rule 11)

	%eof           accept


State 54

	%start_pStoreTyping -> StoreTyping .                (rule 10)

	%eof           accept


State 55

	StoreTyping -> '{' . ListLocationTyping '}'         (rule 49)

	'#'            shift, and enter state 52
	'}'            reduce using rule 51

	LocationTyping goto state 50
	ListLocationTypinggoto state 77

State 56

	ListAssignment -> Assignment .                      (rule 47)
	ListAssignment -> Assignment . ';' ListAssignment    (rule 48)

	';'            shift, and enter state 76
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 57

	%start_pListAssignment -> ListAssignment .          (rule 9)

	%eof           accept


State 58

	Assignment -> '#' . Integer '=' Expr                (rule 45)

	L_integ        shift, and enter state 75

	Integer        goto state 74

State 59

	%start_pAssignment -> Assignment .                  (rule 8)

	%eof           accept


State 60

	%start_pStore -> Store .                            (rule 7)

	%eof           accept


State 61

	Store -> '{' . ListAssignment '}'                   (rule 44)

	'#'            shift, and enter state 58
	'}'            reduce using rule 46

	Assignment     goto state 56
	ListAssignment goto state 73

State 62

	%start_pExpr3 -> Expr3 .                            (rule 6)

	%eof           accept


State 63

	%start_pExpr2 -> Expr2 .                            (rule 5)

	%eof           accept


State 64

	%start_pExpr1 -> Expr1 .                            (rule 4)
	Expr1 -> Expr1 . Expr2                              (rule 29)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18
	%eof           accept

	Ident          goto state 19
	Expr2          goto state 72
	Expr3          goto state 25

State 65

	ListExpr0 -> Expr0 .                                (rule 27)
	ListExpr0 -> Expr0 . ';' ListExpr0                  (rule 28)

	')'            reduce using rule 27
	':'            reduce using rule 27
	';'            shift, and enter state 71
			(reduce using rule 27)

	'}'            reduce using rule 27
	%eof           reduce using rule 27


State 66

	%start_pListExpr0 -> ListExpr0 .                    (rule 3)

	%eof           accept


State 67

	%start_pExpr0 -> Expr0 .                            (rule 2)

	%eof           accept


State 68

	%start_pExpr -> Expr .                              (rule 1)

	%eof           accept


State 69

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 70

	Program -> Expr .                                   (rule 19)

	%eof           reduce using rule 19


State 71

	ListExpr0 -> Expr0 ';' . ListExpr0                  (rule 28)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            reduce using rule 26
	'0'            shift, and enter state 30
	':'            reduce using rule 26
	';'            reduce using rule 26
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	'}'            reduce using rule 26
	L_Ident        shift, and enter state 18
	%eof           reduce using rule 26

	Ident          goto state 19
	Expr0          goto state 65
	ListExpr0      goto state 107
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 72

	Expr1 -> Expr1 Expr2 .                              (rule 29)

	'!'            reduce using rule 29
	'#'            reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'0'            reduce using rule 29
	':'            reduce using rule 29
	':='           reduce using rule 29
	';'            reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'iszero'       reduce using rule 29
	'pred'         reduce using rule 29
	'ref'          reduce using rule 29
	'succ'         reduce using rule 29
	'then'         reduce using rule 29
	'true'         reduce using rule 29
	'unit'         reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	%eof           reduce using rule 29


State 73

	Store -> '{' ListAssignment . '}'                   (rule 44)

	'}'            shift, and enter state 106


State 74

	Assignment -> '#' Integer . '=' Expr                (rule 45)

	'='            shift, and enter state 105


State 75

	Integer -> L_integ .                                (rule 18)

	'!'            reduce using rule 18
	'#'            reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'0'            reduce using rule 18
	':'            reduce using rule 18
	':='           reduce using rule 18
	';'            reduce using rule 18
	'='            reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'iszero'       reduce using rule 18
	'pred'         reduce using rule 18
	'ref'          reduce using rule 18
	'succ'         reduce using rule 18
	'then'         reduce using rule 18
	'true'         reduce using rule 18
	'unit'         reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	%eof           reduce using rule 18


State 76

	ListAssignment -> Assignment ';' . ListAssignment    (rule 48)

	'#'            shift, and enter state 58
	'}'            reduce using rule 46
	%eof           reduce using rule 46

	Assignment     goto state 56
	ListAssignment goto state 104

State 77

	StoreTyping -> '{' ListLocationTyping . '}'         (rule 49)

	'}'            shift, and enter state 103


State 78

	LocationTyping -> '#' Integer . ':' Type            (rule 50)

	':'            shift, and enter state 102


State 79

	ListLocationTyping -> LocationTyping ';' . ListLocationTyping    (rule 53)

	'#'            shift, and enter state 52
	'}'            reduce using rule 51
	%eof           reduce using rule 51

	LocationTyping goto state 50
	ListLocationTypinggoto state 101

State 80

	Type -> Type1 '->' . Type                           (rule 54)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Ref'          shift, and enter state 47
	'Unit'         shift, and enter state 44

	Type           goto state 100
	Type1          goto state 49
	Type2          goto state 46

State 81

	Type1 -> 'Ref' Type2 .                              (rule 56)

	')'            reduce using rule 56
	'->'           reduce using rule 56
	';'            reduce using rule 56
	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 82

	Type2 -> '(' Type . ')'                             (rule 61)

	')'            shift, and enter state 99


State 83

	Expr2 -> 'succ' Expr3 .                             (rule 33)

	'!'            reduce using rule 33
	'#'            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'0'            reduce using rule 33
	':'            reduce using rule 33
	':='           reduce using rule 33
	';'            reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'iszero'       reduce using rule 33
	'pred'         reduce using rule 33
	'ref'          reduce using rule 33
	'succ'         reduce using rule 33
	'then'         reduce using rule 33
	'true'         reduce using rule 33
	'unit'         reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	%eof           reduce using rule 33


State 84

	Expr2 -> 'ref' Expr3 .                              (rule 31)

	'!'            reduce using rule 31
	'#'            reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'0'            reduce using rule 31
	':'            reduce using rule 31
	':='           reduce using rule 31
	';'            reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'iszero'       reduce using rule 31
	'pred'         reduce using rule 31
	'ref'          reduce using rule 31
	'succ'         reduce using rule 31
	'then'         reduce using rule 31
	'true'         reduce using rule 31
	'unit'         reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	%eof           reduce using rule 31


State 85

	Expr2 -> 'pred' Expr3 .                             (rule 34)

	'!'            reduce using rule 34
	'#'            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'0'            reduce using rule 34
	':'            reduce using rule 34
	':='           reduce using rule 34
	';'            reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'iszero'       reduce using rule 34
	'pred'         reduce using rule 34
	'ref'          reduce using rule 34
	'succ'         reduce using rule 34
	'then'         reduce using rule 34
	'true'         reduce using rule 34
	'unit'         reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	%eof           reduce using rule 34


State 86

	Expr2 -> 'iszero' Expr3 .                           (rule 35)

	'!'            reduce using rule 35
	'#'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'0'            reduce using rule 35
	':'            reduce using rule 35
	':='           reduce using rule 35
	';'            reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'iszero'       reduce using rule 35
	'pred'         reduce using rule 35
	'ref'          reduce using rule 35
	'succ'         reduce using rule 35
	'then'         reduce using rule 35
	'true'         reduce using rule 35
	'unit'         reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	%eof           reduce using rule 35


State 87

	Expr0 -> 'if' Expr0 . 'then' Expr0 'else' Expr0     (rule 22)

	'then'         shift, and enter state 98


State 88

	Expr0 -> 'fun' '(' . Ident ':' Type ')' '{' 'return' Expr0 '}'    (rule 23)

	L_Ident        shift, and enter state 18

	Ident          goto state 97

State 89

	Expr3 -> '(' Expr . ')'                             (rule 43)

	')'            shift, and enter state 96


State 90

	Expr3 -> '#' Integer .                              (rule 42)

	'!'            reduce using rule 42
	'#'            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'0'            reduce using rule 42
	':'            reduce using rule 42
	':='           reduce using rule 42
	';'            reduce using rule 42
	'else'         reduce using rule 42
	'false'        reduce using rule 42
	'iszero'       reduce using rule 42
	'pred'         reduce using rule 42
	'ref'          reduce using rule 42
	'succ'         reduce using rule 42
	'then'         reduce using rule 42
	'true'         reduce using rule 42
	'unit'         reduce using rule 42
	'}'            reduce using rule 42
	L_Ident        reduce using rule 42
	%eof           reduce using rule 42


State 91

	Expr2 -> '!' Expr3 .                                (rule 32)

	'!'            reduce using rule 32
	'#'            reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'0'            reduce using rule 32
	':'            reduce using rule 32
	':='           reduce using rule 32
	';'            reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'iszero'       reduce using rule 32
	'pred'         reduce using rule 32
	'ref'          reduce using rule 32
	'succ'         reduce using rule 32
	'then'         reduce using rule 32
	'true'         reduce using rule 32
	'unit'         reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	%eof           reduce using rule 32


State 92

	Expr0 -> Expr1 ':=' . Expr0                         (rule 24)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr0          goto state 95
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 93

	Typing -> Expr ':' . Type                           (rule 62)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Ref'          shift, and enter state 47
	'Unit'         shift, and enter state 44

	Type           goto state 94
	Type1          goto state 49
	Type2          goto state 46

State 94

	Typing -> Expr ':' Type .                           (rule 62)

	%eof           reduce using rule 62


State 95

	Expr0 -> Expr1 ':=' Expr0 .                         (rule 24)

	')'            reduce using rule 24
	':'            reduce using rule 24
	';'            reduce using rule 24
	'else'         reduce using rule 24
	'then'         reduce using rule 24
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 96

	Expr3 -> '(' Expr ')' .                             (rule 43)

	'!'            reduce using rule 43
	'#'            reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'0'            reduce using rule 43
	':'            reduce using rule 43
	':='           reduce using rule 43
	';'            reduce using rule 43
	'else'         reduce using rule 43
	'false'        reduce using rule 43
	'iszero'       reduce using rule 43
	'pred'         reduce using rule 43
	'ref'          reduce using rule 43
	'succ'         reduce using rule 43
	'then'         reduce using rule 43
	'true'         reduce using rule 43
	'unit'         reduce using rule 43
	'}'            reduce using rule 43
	L_Ident        reduce using rule 43
	%eof           reduce using rule 43


State 97

	Expr0 -> 'fun' '(' Ident . ':' Type ')' '{' 'return' Expr0 '}'    (rule 23)

	':'            shift, and enter state 111


State 98

	Expr0 -> 'if' Expr0 'then' . Expr0 'else' Expr0     (rule 22)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr0          goto state 110
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 99

	Type2 -> '(' Type ')' .                             (rule 61)

	')'            reduce using rule 61
	'->'           reduce using rule 61
	';'            reduce using rule 61
	'}'            reduce using rule 61
	%eof           reduce using rule 61


State 100

	Type -> Type1 '->' Type .                           (rule 54)

	')'            reduce using rule 54
	';'            reduce using rule 54
	'}'            reduce using rule 54
	%eof           reduce using rule 54


State 101

	ListLocationTyping -> LocationTyping ';' ListLocationTyping .    (rule 53)

	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 102

	LocationTyping -> '#' Integer ':' . Type            (rule 50)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Ref'          shift, and enter state 47
	'Unit'         shift, and enter state 44

	Type           goto state 109
	Type1          goto state 49
	Type2          goto state 46

State 103

	StoreTyping -> '{' ListLocationTyping '}' .         (rule 49)

	%eof           reduce using rule 49


State 104

	ListAssignment -> Assignment ';' ListAssignment .    (rule 48)

	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 105

	Assignment -> '#' Integer '=' . Expr                (rule 45)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	';'            reduce using rule 26
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	'}'            reduce using rule 26
	L_Ident        shift, and enter state 18
	%eof           reduce using rule 26

	Ident          goto state 19
	Expr           goto state 108
	Expr0          goto state 21
	ListExpr0      goto state 22
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 106

	Store -> '{' ListAssignment '}' .                   (rule 44)

	%eof           reduce using rule 44


State 107

	ListExpr0 -> Expr0 ';' ListExpr0 .                  (rule 28)

	')'            reduce using rule 28
	':'            reduce using rule 28
	';'            reduce using rule 28
	'}'            reduce using rule 28
	%eof           reduce using rule 28


State 108

	Assignment -> '#' Integer '=' Expr .                (rule 45)

	';'            reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 109

	LocationTyping -> '#' Integer ':' Type .            (rule 50)

	';'            reduce using rule 50
	'}'            reduce using rule 50
	%eof           reduce using rule 50


State 110

	Expr0 -> 'if' Expr0 'then' Expr0 . 'else' Expr0     (rule 22)

	'else'         shift, and enter state 113


State 111

	Expr0 -> 'fun' '(' Ident ':' . Type ')' '{' 'return' Expr0 '}'    (rule 23)

	'('            shift, and enter state 41
	'Bool'         shift, and enter state 42
	'Nat'          shift, and enter state 43
	'Ref'          shift, and enter state 47
	'Unit'         shift, and enter state 44

	Type           goto state 112
	Type1          goto state 49
	Type2          goto state 46

State 112

	Expr0 -> 'fun' '(' Ident ':' Type . ')' '{' 'return' Expr0 '}'    (rule 23)

	')'            shift, and enter state 115


State 113

	Expr0 -> 'if' Expr0 'then' Expr0 'else' . Expr0     (rule 22)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr0          goto state 114
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 114

	Expr0 -> 'if' Expr0 'then' Expr0 'else' Expr0 .     (rule 22)

	')'            reduce using rule 22
	':'            reduce using rule 22
	';'            reduce using rule 22
	'else'         reduce using rule 22
	'then'         reduce using rule 22
	'}'            reduce using rule 22
	%eof           reduce using rule 22


State 115

	Expr0 -> 'fun' '(' Ident ':' Type ')' . '{' 'return' Expr0 '}'    (rule 23)

	'{'            shift, and enter state 116


State 116

	Expr0 -> 'fun' '(' Ident ':' Type ')' '{' . 'return' Expr0 '}'    (rule 23)

	'return'       shift, and enter state 117


State 117

	Expr0 -> 'fun' '(' Ident ':' Type ')' '{' 'return' . Expr0 '}'    (rule 23)

	'!'            shift, and enter state 27
	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	'0'            shift, and enter state 30
	'false'        shift, and enter state 31
	'fun'          shift, and enter state 32
	'if'           shift, and enter state 33
	'iszero'       shift, and enter state 34
	'pred'         shift, and enter state 35
	'ref'          shift, and enter state 36
	'succ'         shift, and enter state 37
	'true'         shift, and enter state 38
	'unit'         shift, and enter state 39
	L_Ident        shift, and enter state 18

	Ident          goto state 19
	Expr0          goto state 118
	Expr1          goto state 23
	Expr2          goto state 24
	Expr3          goto state 25

State 118

	Expr0 -> 'fun' '(' Ident ':' Type ')' '{' 'return' Expr0 . '}'    (rule 23)

	'}'            shift, and enter state 119


State 119

	Expr0 -> 'fun' '(' Ident ':' Type ')' '{' 'return' Expr0 '}' .    (rule 23)

	')'            reduce using rule 23
	':'            reduce using rule 23
	';'            reduce using rule 23
	'else'         reduce using rule 23
	'then'         reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 63
Number of terminals: 30
Number of non-terminals: 36
Number of states: 120
