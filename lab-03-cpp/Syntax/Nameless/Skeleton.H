/* File generated by the BNF Converter (bnfc 2.9.4). */

#ifndef NAMELESS_SKELETON_HEADER
#define NAMELESS_SKELETON_HEADER
/* You might want to change the above name. */

#include "Absyn.H"

namespace Nameless
{
class Skeleton : public Visitor
{
public:
  void visitProgram(Program *p);
  void visitExpr(Expr *p);
  void visitBindingExpr(BindingExpr *p);
  void visitType(Type *p);
  void visitFieldTypeExpr(FieldTypeExpr *p);
  void visitTyping(Typing *p);
  void visitProgramExprs(ProgramExprs *p);
  void visitIf(If *p);
  void visitLet(Let *p);
  void visitAbstraction(Abstraction *p);
  void visitRecord(Record *p);
  void visitBinding(Binding *p);
  void visitApplication(Application *p);
  void visitSucc(Succ *p);
  void visitDot(Dot *p);
  void visitPred(Pred *p);
  void visitIsZero(IsZero *p);
  void visitConstTrue(ConstTrue *p);
  void visitConstFalse(ConstFalse *p);
  void visitConstZero(ConstZero *p);
  void visitFreeVar(FreeVar *p);
  void visitBoundVar(BoundVar *p);
  void visitFunType(FunType *p);
  void visitRecordType(RecordType *p);
  void visitBoolType(BoolType *p);
  void visitNatType(NatType *p);
  void visitFieldType(FieldType *p);
  void visitTypingStmt(TypingStmt *p);
  void visitListExpr(ListExpr *p);
  void visitListBindingExpr(ListBindingExpr *p);
  void visitListFieldTypeExpr(ListFieldTypeExpr *p);

  void visitInteger(Integer x);
  void visitChar(Char x);
  void visitDouble(Double x);
  void visitString(String x);
  void visitIdent(Ident x);

};
}

#endif
